# Project: adams
# Date: 2018-12-20 16:03:24
# User: fracpete
# Charset: UTF-8
#
adams.flow.control.Flow -annotation "This flow demonstrates how to calculate (and display) \\nthe z-scores based on the predicted vs actual data that \\na classifier generates. It displays the z-scores twice:\\nfirst, using the z-score display actorl; second, using\\nmanual calculation.\\nThe example here cross-validates LinearRegression on\\nthe UCI dataset bodyfat." -flow-execution-listener adams.flow.execution.NullListener -flow-restart-manager adams.flow.control.flowrestart.NullManager
 adams.flow.standalone.CallableActors
  adams.flow.source.WekaClassifierSetup -name WekaClassifier -classifier "weka.classifiers.functions.LinearRegression -S 0 -R 1.0E-8 -num-decimal-places 4"
  adams.flow.sink.SequencePlotter -name z-scores -x -3 -writer adams.gui.print.NullWriter -paintlet adams.gui.visualization.sequence.LinePaintlet -overlay-paintlet "adams.gui.visualization.sequence.CirclePaintlet -meta-data-color adams.gui.visualization.sequence.metadatacolor.Dummy" -marker-paintlet adams.flow.sink.sequenceplotter.NoMarkers -error-paintlet adams.flow.sink.sequenceplotter.NoErrorPaintlet -mouse-click-action adams.flow.sink.sequenceplotter.NullClickAction -color-provider adams.gui.visualization.core.DefaultColorProvider -overlay-color-provider adams.gui.visualization.core.DefaultColorProvider -title z-scores -axis-x "adams.gui.visualization.core.AxisPanelOptions -label x -tick-generator adams.gui.visualization.core.axis.SimpleTickGenerator -width 40 -custom-format 0.000" -axis-y "adams.gui.visualization.core.AxisPanelOptions -label y -tick-generator adams.gui.visualization.core.axis.SimpleTickGenerator -width 40 -custom-format 0.0" -plot-updater adams.flow.sink.sequenceplotter.SimplePlotUpdater -post-processor adams.flow.sink.sequenceplotter.PassThrough
 adams.flow.source.FileSupplier -file ${FLOWS}/data/bodyfat.arff
 adams.flow.transformer.WekaFileReader -loader weka.core.converters.ArffLoader
 adams.flow.transformer.WekaClassSelector
 adams.flow.transformer.WekaCrossValidationEvaluator -output weka.classifiers.evaluation.output.prediction.Null -classifier WekaClassifier -generator weka.classifiers.DefaultCrossValidationFoldGenerator
 adams.flow.control.Tee -name "z-score actor"
  adams.flow.transformer.WekaPredictionsToSpreadSheet
  adams.flow.sink.ZScoreDisplay -x -3 -y -3 -writer adams.gui.print.NullWriter -overlay adams.gui.visualization.stats.zscore.Mean -overlay "adams.gui.visualization.stats.zscore.StdDev -color #ffc800 -standard-deviations 2.0" -overlay "adams.gui.visualization.stats.zscore.StdDev -color #ff0000 -standard-deviations 3.0" -paintlet adams.gui.visualization.stats.paintlet.ZScoreCircle
 adams.flow.transformer.WekaPredictionsToInstances
 adams.flow.transformer.WekaInstancesStatistic -type COLUMN_BY_REGEXP -location Actual -location Predicted -statistic "adams.data.statistics.ArrayStandardScores -is-sample true"
 adams.flow.control.Branch
  adams.flow.sink.SpreadSheetDisplay -cell-rendering-customizer adams.gui.core.spreadsheettable.DefaultCellRenderingCustomizer -writer adams.data.io.output.NullWriter
  adams.flow.control.Branch -name "manual z-zscores"
   adams.flow.control.Sequence -name actual
    adams.flow.transformer.WekaExtractArray -index 1
    adams.flow.transformer.ArrayToSequence
    adams.flow.transformer.MakePlotContainer -plot-name actual
    adams.flow.sink.CallableSink -callable z-scores
   adams.flow.control.Sequence -name predicted
    adams.flow.transformer.WekaExtractArray -index 2
    adams.flow.transformer.ArrayToSequence
    adams.flow.transformer.MakePlotContainer -plot-name predicted
    adams.flow.sink.CallableSink -callable z-scores